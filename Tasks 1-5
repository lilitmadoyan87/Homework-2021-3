//  Task 1
//  Write a recursive function to determine whether all digits of the number are odd or not.

function isOdd(num) {
  let strnum = String(num);
    for(let i = 0; i < strnum.length; i++) {
     if(strnum[i] % 2 === 0) {
      return false
     }
   } 
  return true
}
console.log(isOdd(13456));

function recIsOdd(num, i = String(num).length-1) {
  if(String(num)[i] % 2 === 0) {
    return false
  }
  if(i === 0 && String(num)[i] % 2 === 1) {
    return true
  } else{
    return recIsOdd(String(num)[i-1])
  }
}
console.log(recIsOdd(67));

//  Task 2  Recursiayov che (((
// Given an array of numbers. Write a recursive function to find its minimal positive element. (if such element does not exist, return -1)․

function findMinPositiveNumber(arr) {
  let arr1 = [];
  for(let i = 0; i < arr.length; i++) {
    if(arr[i] >= 0)  {
      arr1.push(arr[i])
    } 
  }
  let posNum = arr1[0]
  if(arr1.length !== 0) {
    for(let j = 1; j< arr1.length; j++) {
      if(arr1[j] < posNum) {
        posNum = arr1[j]
      }
    }
    return posNum
  } else {
     return -1
  }
}
console.log(findMinPositiveNumber([1, 2, -8,0, 8]));

// Task 3
// Given an array of numbers which is almost sorted in ascending order.  Find the index where sorting order is violated.

function findViolatedIndex(arr) {
  for(let i = 0; i < arr.length; i++) {
    if(arr[i+1] < arr[i]) {
      return i+1
    }
  }
  return -1  
}

console.log(findViolatedIndex([1, 2, 3, 4, 4, 5, 0, 12]))


